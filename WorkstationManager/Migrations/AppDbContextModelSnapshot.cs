// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WorkstationManager.Data;

#nullable disable

namespace WorkstationManager.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("WorkstationManager.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("RoleDescription")
                        .HasColumnType("longtext");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RoleDescription = "Administrator with full access",
                            RoleName = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            RoleDescription = "Standard user with limited access",
                            RoleName = "User"
                        });
                });

            modelBuilder.Entity("WorkstationManager.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "John",
                            LastName = "Doe",
                            Password = "$2a$11$Xj64eWw0hRmN.DyyLKjZA.Tze82i/Kn0gz.sElGNN6VREDmpd/qFW",
                            RoleId = 1,
                            Username = "johndoe"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Jane",
                            LastName = "Smith",
                            Password = "$2a$11$WbdArPUeEn3kGEvYG/790.hDATZu1yxcGmWBBQqqMxGd2U4oLXc2S",
                            RoleId = 2,
                            Username = "janesmith"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Robert",
                            LastName = "Johnson",
                            Password = "$2a$11$id2aFqUXxZIL5WTwnjiAVOFaCYD7Q6o/QQhZRtuUYSAUMXh2M7wUC",
                            RoleId = 2,
                            Username = "rjohnson"
                        },
                        new
                        {
                            Id = 4,
                            FirstName = "Emily",
                            LastName = "Williams",
                            Password = "$2a$11$ZwusYwThnihgEC6G.d3.LOVx6l2gx.VTDYcqi7bLxmRGRxKoBJ092",
                            RoleId = 2,
                            Username = "ewilliams"
                        });
                });

            modelBuilder.Entity("WorkstationManager.Models.UserWorkPosition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("WorkDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("WorkPositionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("WorkPositionId");

                    b.ToTable("UserWorkPositions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ProductName = "ERP System",
                            UserId = 1,
                            WorkDate = new DateTime(2023, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WorkPositionId = 1
                        },
                        new
                        {
                            Id = 2,
                            ProductName = "CRM Platform",
                            UserId = 1,
                            WorkDate = new DateTime(2023, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WorkPositionId = 4
                        },
                        new
                        {
                            Id = 3,
                            ProductName = "Mobile App",
                            UserId = 2,
                            WorkDate = new DateTime(2023, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WorkPositionId = 2
                        },
                        new
                        {
                            Id = 4,
                            ProductName = "Data Analytics Tool",
                            UserId = 3,
                            WorkDate = new DateTime(2023, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WorkPositionId = 1
                        },
                        new
                        {
                            Id = 5,
                            ProductName = "E-commerce Website",
                            UserId = 4,
                            WorkDate = new DateTime(2023, 5, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WorkPositionId = 3
                        });
                });

            modelBuilder.Entity("WorkstationManager.Models.WorkPosition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("WorkPositionDescription")
                        .HasColumnType("longtext");

                    b.Property<string>("WorkPositionName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("WorkPositions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            WorkPositionDescription = "Software development position",
                            WorkPositionName = "Developer"
                        },
                        new
                        {
                            Id = 2,
                            WorkPositionDescription = "UI/UX design position",
                            WorkPositionName = "Designer"
                        },
                        new
                        {
                            Id = 3,
                            WorkPositionDescription = "Quality assurance position",
                            WorkPositionName = "Tester"
                        },
                        new
                        {
                            Id = 4,
                            WorkPositionDescription = "Infrastructure and deployment position",
                            WorkPositionName = "DevOps"
                        });
                });

            modelBuilder.Entity("WorkstationManager.Models.User", b =>
                {
                    b.HasOne("WorkstationManager.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("WorkstationManager.Models.UserWorkPosition", b =>
                {
                    b.HasOne("WorkstationManager.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorkstationManager.Models.WorkPosition", "WorkPosition")
                        .WithMany()
                        .HasForeignKey("WorkPositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("WorkPosition");
                });
#pragma warning restore 612, 618
        }
    }
}
